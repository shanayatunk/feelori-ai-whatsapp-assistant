"""Auto-migration on startup

Revision ID: 389fb1fa5067
Revises: 
Create Date: 2025-07-26 08:02:09.443121

"""
from alembic import op
import sqlalchemy as sa
import pgvector.sqlalchemy
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '389fb1fa5067'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('conversations',
    sa.Column('customer_phone', sa.String(length=20), nullable=False),
    sa.Column('status', sa.Enum('ACTIVE', 'CLOSED', 'PENDING', 'BLOCKED', name='conversationstatus'), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('conversations', schema=None) as batch_op:
        batch_op.create_index('idx_conversation_phone_status', ['customer_phone', 'status'], unique=False)
        batch_op.create_index('idx_conversation_status_updated', ['status', 'updated_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_conversations_customer_phone'), ['customer_phone'], unique=False)
        batch_op.create_index(batch_op.f('ix_conversations_status'), ['status'], unique=False)

    op.create_table('documents',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('document_type', sa.Enum('FAQ', 'POLICY', 'GUIDE', 'PRODUCT_INFO', name='documenttype'), nullable=False),
    sa.Column('category', sa.String(length=100), nullable=True),
    sa.Column('source_url', sa.String(length=512), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('documents', schema=None) as batch_op:
        batch_op.create_index('idx_document_type_category_active', ['document_type', 'category', 'is_active'], unique=False)
        batch_op.create_index(batch_op.f('ix_documents_category'), ['category'], unique=False)
        batch_op.create_index(batch_op.f('ix_documents_document_type'), ['document_type'], unique=False)

    op.create_table('intent_patterns',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('pattern', sa.String(length=255), nullable=False),
    sa.Column('intent', sa.String(length=100), nullable=False),
    sa.Column('confidence', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('intent_patterns', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_intent_patterns_intent'), ['intent'], unique=False)

    op.create_table('orders',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('order_number', sa.String(length=50), nullable=False),
    sa.Column('customer_phone', sa.String(length=20), nullable=False),
    sa.Column('total_price', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'CONFIRMED', 'SHIPPED', 'DELIVERED', 'CANCELLED', 'RETURNED', name='orderstatus'), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('orders', schema=None) as batch_op:
        batch_op.create_index('idx_order_phone_status', ['customer_phone', 'status'], unique=False)
        batch_op.create_index(batch_op.f('ix_orders_customer_phone'), ['customer_phone'], unique=False)
        batch_op.create_index(batch_op.f('ix_orders_order_number'), ['order_number'], unique=True)
        batch_op.create_index(batch_op.f('ix_orders_status'), ['status'], unique=False)

    op.create_table('conversation_contexts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('conversation_id', sa.UUID(), nullable=False),
    sa.Column('context_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['conversation_id'], ['conversations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('conversation_contexts', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_conversation_contexts_conversation_id'), ['conversation_id'], unique=False)

    op.create_table('document_chunks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('document_id', sa.Integer(), nullable=False),
    sa.Column('chunk_text', sa.Text(), nullable=False),
    sa.Column('chunk_index', sa.Integer(), nullable=False),
    sa.Column('embedding', pgvector.sqlalchemy.vector.VECTOR(dim=768), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['document_id'], ['documents.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('document_chunks', schema=None) as batch_op:
        batch_op.create_index('idx_chunk_document_index', ['document_id', 'chunk_index'], unique=True)
        batch_op.create_index('idx_chunk_embedding', ['embedding'], unique=False, postgresql_using='hnsw', postgresql_with={'m': 16, 'ef_construction': 64}, postgresql_ops={'embedding': 'vector_l2_ops'})

    op.create_table('messages',
    sa.Column('conversation_id', sa.UUID(), nullable=False),
    sa.Column('whatsapp_message_id', sa.String(length=255), nullable=True),
    sa.Column('message_type', sa.Enum('INCOMING', 'OUTGOING', 'SYSTEM', name='messagetype'), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.CheckConstraint("message_type IN ('INCOMING', 'OUTGOING', 'SYSTEM')", name='check_message_type'),
    sa.ForeignKeyConstraint(['conversation_id'], ['conversations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('messages', schema=None) as batch_op:
        batch_op.create_index('idx_message_conv_created', ['conversation_id', 'created_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_messages_conversation_id'), ['conversation_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_messages_message_type'), ['message_type'], unique=False)
        batch_op.create_index(batch_op.f('ix_messages_status'), ['status'], unique=False)
        batch_op.create_index(batch_op.f('ix_messages_whatsapp_message_id'), ['whatsapp_message_id'], unique=True)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('messages', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_messages_whatsapp_message_id'))
        batch_op.drop_index(batch_op.f('ix_messages_status'))
        batch_op.drop_index(batch_op.f('ix_messages_message_type'))
        batch_op.drop_index(batch_op.f('ix_messages_conversation_id'))
        batch_op.drop_index('idx_message_conv_created')

    op.drop_table('messages')
    with op.batch_alter_table('document_chunks', schema=None) as batch_op:
        batch_op.drop_index('idx_chunk_embedding', postgresql_using='hnsw', postgresql_with={'m': 16, 'ef_construction': 64})
        batch_op.drop_index('idx_chunk_document_index')

    op.drop_table('document_chunks')
    with op.batch_alter_table('conversation_contexts', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_conversation_contexts_conversation_id'))

    op.drop_table('conversation_contexts')
    with op.batch_alter_table('orders', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_orders_status'))
        batch_op.drop_index(batch_op.f('ix_orders_order_number'))
        batch_op.drop_index(batch_op.f('ix_orders_customer_phone'))
        batch_op.drop_index('idx_order_phone_status')

    op.drop_table('orders')
    with op.batch_alter_table('intent_patterns', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_intent_patterns_intent'))

    op.drop_table('intent_patterns')
    with op.batch_alter_table('documents', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_documents_document_type'))
        batch_op.drop_index(batch_op.f('ix_documents_category'))
        batch_op.drop_index('idx_document_type_category_active')

    op.drop_table('documents')
    with op.batch_alter_table('conversations', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_conversations_status'))
        batch_op.drop_index(batch_op.f('ix_conversations_customer_phone'))
        batch_op.drop_index('idx_conversation_status_updated')
        batch_op.drop_index('idx_conversation_phone_status')

    op.drop_table('conversations')
    # ### end Alembic commands ###
