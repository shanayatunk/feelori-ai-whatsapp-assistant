services:
  whatsapp-gateway:
    build:
      context: ./whatsapp_gateway
      dockerfile: Dockerfile
    environment:
      - FLASK_APP=src.main
      - ECOMMERCE_API_URL=http://ecommerce-integration:5002
      - AI_SERVICE_URL=http://ai-conversation-engine:5001
      - PYTHONPATH=/home/appuser
      - SHOPIFY_STORE_URL=https://feelori.myshopify.com
      - DATABASE_URL_FILE=/run/secrets/database_url.txt
      - WHATSAPP_ACCESS_TOKEN_FILE=/run/secrets/whatsapp_access_token.txt
      - WHATSAPP_PHONE_NUMBER_ID_FILE=/run/secrets/whatsapp_phone_number_id.txt
      - WHATSAPP_VERIFY_TOKEN_FILE=/run/secrets/whatsapp_verify_token.txt
      - INTERNAL_API_KEY_FILE=/run/secrets/internal_api_key.txt
      - GEMINI_API_KEY_FILE=/run/secrets/gemini_api_key.txt
      - OPENAI_API_KEY_FILE=/run/secrets/openai_api_key.txt
      - WHATSAPP_WEBHOOK_SECRET_FILE=/run/secrets/webhook_secret.txt
      - API_KEY_FILE=/run/secrets/api_key.txt
      - REDIS_PASSWORD_FILE=/run/secrets/redis_password.txt
    volumes: # MODIFIED: Use the absolute path to your secrets folder
      - C:/Users/hp/Documents/feelori-secrets:/run/secrets:ro
      - ./shared:/home/appuser/shared
      - whatsapp_data:/home/appuser/data
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 10
      start_period: 60s
    restart: unless-stopped
    networks:
      - ai-assistant-network

  celery-worker:
    build:
      context: ./whatsapp_gateway
      dockerfile: Dockerfile
    command: celery -A src.tasks:celery_app worker --loglevel=info --concurrency=2
    depends_on:
      redis:
        condition: service_started
      whatsapp-gateway:
        condition: service_healthy
    environment:
      - ECOMMERCE_API_URL=http://ecommerce-integration:5002
      - AI_SERVICE_URL=http://ai-conversation-engine:5001
      - PYTHONPATH=/home/appuser
      - SHOPIFY_STORE_URL=https://feelori.myshopify.com
      - DATABASE_URL_FILE=/run/secrets/database_url.txt
      - INTERNAL_API_KEY_FILE=/run/secrets/internal_api_key.txt
      - GEMINI_API_KEY_FILE=/run/secrets/gemini_api_key.txt
      - OPENAI_API_KEY_FILE=/run/secrets/openai_api_key.txt
      - WHATSAPP_ACCESS_TOKEN_FILE=/run/secrets/whatsapp_access_token.txt
      - WHATSAPP_PHONE_NUMBER_ID_FILE=/run/secrets/whatsapp_phone_number_id.txt
      - WHATSAPP_VERIFY_TOKEN_FILE=/run/secrets/whatsapp_verify_token.txt
      - REDIS_PASSWORD_FILE=/run/secrets/redis_password.txt
    volumes: # MODIFIED: Use the absolute path to your secrets folder
      - C:/Users/hp/Documents/feelori-secrets:/run/secrets:ro
      - ./shared:/home/appuser/shared
      - whatsapp_data:/home/appuser/data
    restart: unless-stopped
    networks:
      - ai-assistant-network

  ai-conversation-engine:
    build:
      context: ./ai_conversation_engine
      dockerfile: Dockerfile
    environment:
      - FLASK_APP=src.main
      - ECOMMERCE_API_URL=http://ecommerce-integration:5002
      - ALLOWED_ORIGINS=http://localhost:8080,http://127.0.0.1:8080
      - PYTHONPATH=/home/appuser
      - GEMINI_API_KEY_FILE=/run/secrets/gemini_api_key.txt
      - OPENAI_API_KEY_FILE=/run/secrets/openai_api_key.txt
      - INTERNAL_API_KEY_FILE=/run/secrets/internal_api_key.txt
      - SHOPIFY_STORE_URL=https://feelori.myshopify.com
    volumes: # MODIFIED: Use the absolute path to your secrets folder
      - C:/Users/hp/Documents/feelori-secrets:/run/secrets:ro
      - ./ai_conversation_engine:/home/appuser
      - ./shared:/home/appuser/shared
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5001/ai/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped
    networks:
      - ai-assistant-network

  ecommerce-integration:
    build:
      context: ./ecommerce_integration
      dockerfile: Dockerfile
    environment:
      - FLASK_APP=src.main
      - PYTHONPATH=/home/appuser
      - SHOPIFY_STORE_URL=https://feelori.myshopify.com
      - SHOPIFY_ACCESS_TOKEN_FILE=/run/secrets/shopify_access_token.txt
    volumes: # MODIFIED: Use the absolute path to your secrets folder
      - C:/Users/hp/Documents/feelori-secrets:/run/secrets:ro
      - ./ecommerce_integration:/home/appuser
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5002/ecommerce/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped
    networks:
      - ai-assistant-network

  admin-dashboard:
    build:
      context: ./admin-dashboard
      dockerfile: Dockerfile
    restart: unless-stopped
    networks:
      - ai-assistant-network

  redis:
    image: redis:7-alpine
    command: sh -c "exec redis-server --requirepass \"$$(cat /run/secrets/redis_password.txt)\""
    ports:
      - "6379:6379"
    volumes: # MODIFIED: Use the absolute path to your secrets folder
      - C:/Users/hp/Documents/feelori-secrets:/run/secrets:ro
      - redis_data:/data
    restart: unless-stopped
    networks:
      - ai-assistant-network

  postgres:
    image: pgvector/pgvector:pg15
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=ai_assistant
      - POSTGRES_USER=ai_assistant
      - POSTGRES_PASSWORD_FILE=/run/secrets/postgres_password.txt
    volumes: # MODIFIED: Use the absolute path to your secrets folder
      - C:/Users/hp/Documents/feelori-secrets:/run/secrets:ro
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "ai_assistant", "-d", "ai_assistant"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped
    networks:
      - ai-assistant-network

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - whatsapp-gateway
      - ai-conversation-engine
      - ecommerce-integration
      - admin-dashboard
    restart: unless-stopped
    networks:
      - ai-assistant-network

volumes:
  whatsapp_data:
  redis_data:
  postgres_data:

networks:
  ai-assistant-network:
    driver: bridge